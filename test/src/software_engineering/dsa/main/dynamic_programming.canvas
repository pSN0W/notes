{
	"nodes":[
		{"type":"text","text":"**Dynamic Programming**","id":"50c944557b52e782","x":-140,"y":-60,"width":240,"height":60},
		{"type":"text","text":"**Linear DP**\nFind recurrence and memoise","id":"17e5e57f19bcc3a4","x":-840,"y":601,"width":284,"height":60},
		{"type":"text","text":"[[decode_ways]]\nAdd next if <26 call idx+1 idx+2","id":"8d06e398421d0082","x":-681,"y":400,"width":250,"height":60},
		{"type":"text","text":"[[num_unique_bst]]\nChoose curr as root and solve for both side","id":"6d064942bcd71496","x":-823,"y":320,"width":250,"height":60},
		{"type":"text","text":"[[buy_and_sell_stock_iii]]\nAssume you sold for 1st today and then buy after today. Subarray max will help","id":"33e31bcef174fe67","x":-965,"y":400,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[perfect_square_breaking]]\n`ans[12] = 1 + ans[3]` `3*3` as one square","id":"dba8787243bccaf1","x":-1100,"y":480,"width":250,"height":60},
		{"type":"text","text":"[[stocks_with_cooldown]]\nHave a memoised recursive dp solution","id":"7fc5510b1d0348fe","x":-1158,"y":601,"width":250,"height":60},
		{"type":"text","text":"[[counting_bits]]\nYou can use the lsb so num_bits in 7 = 1 (last bit 1) + num bits in 3","id":"96e10aa7616b8db0","x":-1158,"y":680,"width":250,"height":60},
		{"type":"text","text":"[[integer_break]]\nYou can use dp[i] = `max(max(dp[i],j*(i-j)), dp[j]* (i-j))` you check for breaking in just 2 too. Solve by maths too","id":"434cd8010a42f71f","x":-1152,"y":752,"width":250,"height":108,"color":"1"},
		{"type":"text","text":"[[combination_sum]]\nUse index at arr to avoid duplicates","id":"47094d680dc2603c","x":-1000,"y":880,"width":250,"height":100},
		{"type":"text","text":"[[count_number_with_unique_digits]]\nUse PnC","id":"f8a59859216cb288","x":-823,"y":800,"width":250,"height":60},
		{"type":"text","text":"[[wiggle_subsequence]]\nYou did with lis derivative but its of counting number of peak and trough","id":"a9529bf3516750b4","x":-715,"y":880,"width":250,"height":100,"color":"1"},
		{"type":"text","text":"[[coin_change_ii]]\nUse index at arr to avoid duplicates","id":"574d8ff70603d457","x":-1283,"y":880,"width":250,"height":100,"color":"1"},
		{"type":"text","text":"[[student_attendance_record]]","id":"0702edbe7a198a54","x":-556,"y":800,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[decode_ways_ii]]\nFigure out ways to break `*`. What if it is `**` or `*num` or `num*`","id":"e2b71973527cf8e8","x":-431,"y":880,"width":250,"height":100,"color":"1"},
		{"type":"text","text":"[[delete_and_earn]]\nYou delete this one or you don't delete curr","id":"c6041d3c2818f400","x":-380,"y":722,"width":250,"height":60},
		{"type":"text","text":"[[triplet_with_bitwise_and_0]]\nStore the pair and find last","id":"fa81b080c4b78003","x":-380,"y":650,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[partition_for_max_sum]]\nPre-compute max and try all combination","id":"7e732f8dde797a16","x":-379,"y":574,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[book_shelf_ordering]]\nPut a book in current or start a new shelf . solve(idx) ans when you start a new shelf with idx book","id":"50ca5ff067102a59","x":-383,"y":493,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[min_open_taps_to_water_garden]]\n","id":"bda7e5eab1b951ee","x":-1354,"y":400,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[count_all_valid_pickup_and_delivery]]\nThink like valid paranthesis. Just when you put pickup you can choose any of left pickup orders and for drop you can choose num_pickup - num_already_dropped","id":"ec3898dd2e46eb1a","x":-1453,"y":541,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[stone_game_iii]]\nYou calculate only for one participant. One will try to maximise and other minimuse ","id":"683c1372404729b3","x":-1453,"y":635,"width":250,"height":91},
		{"type":"text","text":"[[form_largest_integer_with_digits_that_sum_to_target]]","id":"d527a6ef2f8c5781","x":-1453,"y":752,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[stone_game_iv]]\nClassic problem of you want to go to winning state","id":"c3dc150a0f6991ea","x":-280,"y":800,"width":250,"height":60},
		{"type":"text","text":"**DP on String**","id":"40c7865b8f25b70c","x":-850,"y":0,"width":250,"height":60},
		{"type":"text","text":"[[distinct_subsequence]]\nif curr matches go to next and also try to match another char with same too","id":"0bbe7609662682b0","x":-1211,"y":-143,"width":250,"height":103},
		{"type":"text","text":"[[palindrome_partitioning]]\nPartition on every pal you get","id":"7faba588745301d3","x":-1211,"y":-30,"width":250,"height":60},
		{"type":"text","text":"[[word_break_ii]]\nMatch a word and call for next","id":"c6062d8e0682f91c","x":-1211,"y":40,"width":250,"height":60},
		{"type":"text","text":"[[count_the_repetitions]]","id":"592a6510bc488753","x":-1211,"y":120,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[unique_substrings_in_wraparound_string]]\nLargest that end at each char","id":"aa5b460a0a939bfb","x":-1211,"y":200,"width":250,"height":60},
		{"type":"text","text":"[[concatenated_words]]\nCheck code will be helpful","id":"ea336c7ae5102330","x":-1211,"y":280,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[minimum_ascii_delete_sum_for_two_string]]\nSame as LCS just you add the value of deletion","id":"558ec9bc48ac591e","x":-880,"y":100,"width":250,"height":60},
		{"type":"text","text":"[[count_different_palindromic_subsequence]]\n","id":"f14e4b5030e3eb18","x":-805,"y":203,"width":250,"height":77,"color":"1"},
		{"type":"text","text":"[[distinct_subsequence_ii]]\nVery good question. You think of number of word ending with current char","id":"6d3f0ee38c477103","x":-577,"y":-119,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[longest_chunked_palindrome_decomposition]]\nYou choose the shortest match","id":"8df6e7351aa1daa0","x":-725,"y":-203,"width":250,"height":60},
		{"type":"text","text":"[[palindrome_partitoning_ii]]\nIt has some good optimisations check it out","id":"982affecf50b77a7","x":-1540,"y":-91,"width":270,"height":90,"color":"1"},
		{"type":"text","text":"[[palindrome_partitoning_iii]]\nYou do forward partitioning but now each partition will have cost","id":"40a403be891b3ad8","x":-1540,"y":30,"width":270,"height":90,"color":"1"},
		{"type":"text","text":"[[find_good_strings]]\n","id":"ec9f179481f9c2a7","x":-600,"y":100,"width":250,"height":77,"color":"1"},
		{"type":"text","text":"[[string_compression_ii]]","id":"47db9bdb256c41e5","x":-1005,"y":-233,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[number_of_ways_to_form_target_string_given_dictionary]]","id":"5dcc011204507677","x":-1366,"y":-234,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"**DP on Tree**","id":"03e3427fe071d031","x":-80,"y":-560,"width":140,"height":60},
		{"type":"text","text":"[[house_robber_iii]]\nYou choose to rob or not","id":"83a29c4a8c5b1c80","x":120,"y":-820,"width":250,"height":60},
		{"type":"text","text":"[[maximum_product_of_splitted_binary_tree]]\nCalc total sum and then get sum for each subtree","id":"f6a625516a6f8c7f","x":-157,"y":-805,"width":250,"height":105},
		{"type":"text","text":"[[longest_zigzag_path_in_binary_tree]]\nReturn longest for both left and right","id":"36790821c6931162","x":125,"y":-651,"width":250,"height":91},
		{"type":"text","text":"[[maximum_sum_bst_in_binary_tree]]\nYou validate a tree and update for that","id":"e022313f456259a3","x":128,"y":-514,"width":250,"height":94},
		{"type":"text","text":"[[reorder_array_to_get_same_bst]]","id":"2baf9f379258a853","x":109,"y":-356,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"**Knapsack DP**","id":"515a2406780f1d95","x":180,"y":601,"width":250,"height":60},
		{"type":"text","text":"[[house_robber_ii]]\nSolve for 0 to n-1 and 1 to n","id":"cb9c16a40af266f6","x":8,"y":763,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[ones_and_zeros]]\nConvert to dictionary. Choose to consider or not","id":"bf63a203b0ed9858","x":69,"y":876,"width":250,"height":84},
		{"type":"text","text":"[[two_key_keyboard]]\nsolve(i) denotes min number of step to generate n if there are i char on board","id":"cb44fcf13e689e44","x":280,"y":747,"width":250,"height":113},
		{"type":"text","text":"[[minimum_swaps_to_make_subsequence_increasing]]\nIf you need to swap then swap otherwise swap and not swap. Keep track of prev swapped","id":"9f4ab1beed5d555f","x":338,"y":883,"width":250,"height":137,"color":"1"},
		{"type":"text","text":"[[profitable_scheme]]\nA classical Knapsack problem","id":"96e222fb919e0cf5","x":-100,"y":493,"width":250,"height":60},
		{"type":"text","text":"[[tallest_billboard]]\nKeep track of the diff between two bars. For each bar you can skip, add to current or add to other(neg for you)","id":"a264a0de0542254c","x":-117,"y":574,"width":250,"height":102,"color":"1"},
		{"type":"text","text":"[[reducing_dishes]]","id":"6e42de452965aa3d","x":466,"y":601,"width":194,"height":60,"color":"1"},
		{"type":"text","text":"**DP with Bit Manipulation**","id":"3ef6411e18abb680","x":-880,"y":-560,"width":250,"height":60},
		{"type":"text","text":"[[can_i_win]]\nYou basically choose from one of the unchosen one","id":"be045e2954004e4a","x":-1305,"y":-374,"width":250,"height":114},
		{"type":"text","text":"[[stickers_to_spell_words]]\nYou use bitmask on the characters you have used","id":"4d3f6ba9842ce705","x":-1305,"y":-480,"width":250,"height":80},
		{"type":"text","text":"[[smallest_sufficient_team]]\n","id":"6335df250cb036b2","x":-1305,"y":-560,"width":250,"height":60,"color":"1"},
		{"type":"text","text":"[[shortest_path_for_visiting_all_nodes]]","id":"8f0098f2fef86509","x":-1305,"y":-660,"width":250,"height":80,"color":"1"},
		{"type":"text","text":"[[maximum_students_taking_exam]]","id":"3bf2782ae76c43a4","x":-1305,"y":-760,"width":250,"height":80,"color":"1"},
		{"id":"bbf52f19d0d6ecd3","x":-1040,"y":-805,"width":250,"height":60,"color":"1","type":"text","text":"[[shortest_common_superstring]]"},
		{"id":"1ee68b5ccfe02791","x":-452,"y":-805,"width":250,"height":105,"color":"1","type":"text","text":"[[number_of_ways_to_wear_hats]]\nYou have to change your perspective and change the variable to mask"},
		{"type":"text","text":"[[min_cost_to_connect_two_group_of_point]]\nMask all the points that are already connected and for non connected compute min ","id":"006541ef66596c51","x":-755,"y":-805,"width":250,"height":105,"color":"1"},
		{"id":"599c66a23db9ab1b","x":-702,"y":-347,"width":250,"height":60,"color":"1","type":"text","text":"[[maximum_number_of_achievable_requests]]"},
		{"id":"bb7476fc6eac1ef5","x":-967,"y":-369,"width":250,"height":60,"color":"1","type":"text","text":"[[distribute_repeated_integer]]\n"},
		{"id":"8e2c5f136c10e8c3","x":-552,"y":-560,"width":250,"height":60,"color":"1","type":"text","text":"[[find_maximum_time_to_finish_all_jobs]]"}
	],
	"edges":[
		{"id":"4d11ce73d25c3d4e","fromNode":"50c944557b52e782","fromSide":"left","toNode":"17e5e57f19bcc3a4","toSide":"right"},
		{"id":"fd715c8cbe11b544","fromNode":"47094d680dc2603c","fromSide":"left","toNode":"574d8ff70603d457","toSide":"right"},
		{"id":"6f6b7816422e0a65","fromNode":"17e5e57f19bcc3a4","fromSide":"left","toNode":"7fc5510b1d0348fe","toSide":"right"},
		{"id":"31e959992d86e9d6","fromNode":"17e5e57f19bcc3a4","fromSide":"left","toNode":"96e10aa7616b8db0","toSide":"right"},
		{"id":"d32f1ddf24f940e4","fromNode":"17e5e57f19bcc3a4","fromSide":"left","toNode":"434cd8010a42f71f","toSide":"right"},
		{"id":"c2300c8bfc8a9c24","fromNode":"17e5e57f19bcc3a4","fromSide":"bottom","toNode":"47094d680dc2603c","toSide":"top"},
		{"id":"1e9dcf9966fa8831","fromNode":"17e5e57f19bcc3a4","fromSide":"bottom","toNode":"f8a59859216cb288","toSide":"top"},
		{"id":"cbcb80164776aba4","fromNode":"17e5e57f19bcc3a4","fromSide":"bottom","toNode":"a9529bf3516750b4","toSide":"top"},
		{"id":"df3a54777d5bb393","fromNode":"17e5e57f19bcc3a4","fromSide":"bottom","toNode":"e2b71973527cf8e8","toSide":"top"},
		{"id":"417af4f08f143513","fromNode":"17e5e57f19bcc3a4","fromSide":"bottom","toNode":"0702edbe7a198a54","toSide":"top"},
		{"id":"4523ae372ad64edb","fromNode":"17e5e57f19bcc3a4","fromSide":"right","toNode":"c6041d3c2818f400","toSide":"left"},
		{"id":"f123f923bba236c6","fromNode":"17e5e57f19bcc3a4","fromSide":"right","toNode":"fa81b080c4b78003","toSide":"left"},
		{"id":"9c17ee4143613a64","fromNode":"17e5e57f19bcc3a4","fromSide":"right","toNode":"7e732f8dde797a16","toSide":"left"},
		{"id":"a45a0ef289036974","fromNode":"17e5e57f19bcc3a4","fromSide":"right","toNode":"50ca5ff067102a59","toSide":"left"},
		{"id":"7ece763f3ce296ee","fromNode":"17e5e57f19bcc3a4","fromSide":"top","toNode":"8d06e398421d0082","toSide":"bottom"},
		{"id":"a2762cd52d52462d","fromNode":"17e5e57f19bcc3a4","fromSide":"top","toNode":"dba8787243bccaf1","toSide":"bottom"},
		{"id":"5f181b9ef0b61d67","fromNode":"17e5e57f19bcc3a4","fromSide":"top","toNode":"33e31bcef174fe67","toSide":"bottom"},
		{"id":"a257320c0d9a4d0d","fromNode":"17e5e57f19bcc3a4","fromSide":"top","toNode":"6d064942bcd71496","toSide":"bottom"},
		{"id":"85ddddee3403f699","fromNode":"17e5e57f19bcc3a4","fromSide":"top","toNode":"bda7e5eab1b951ee","toSide":"bottom"},
		{"id":"cfa9b42c46801a88","fromNode":"17e5e57f19bcc3a4","fromSide":"left","toNode":"ec3898dd2e46eb1a","toSide":"right"},
		{"id":"0f72d28616718f9f","fromNode":"17e5e57f19bcc3a4","fromSide":"left","toNode":"683c1372404729b3","toSide":"right"},
		{"id":"d319a9dbd8bca8e6","fromNode":"17e5e57f19bcc3a4","fromSide":"left","toNode":"d527a6ef2f8c5781","toSide":"right"},
		{"id":"8a6ca4fb2dd04e7b","fromNode":"17e5e57f19bcc3a4","fromSide":"right","toNode":"c3dc150a0f6991ea","toSide":"left"},
		{"id":"5840998e6f03845f","fromNode":"50c944557b52e782","fromSide":"left","toNode":"40c7865b8f25b70c","toSide":"right"},
		{"id":"beb951458611d329","fromNode":"40c7865b8f25b70c","fromSide":"left","toNode":"0bbe7609662682b0","toSide":"right"},
		{"id":"b94bc10cad2f6659","fromNode":"40c7865b8f25b70c","fromSide":"left","toNode":"7faba588745301d3","toSide":"right"},
		{"id":"6cebce5024e79119","fromNode":"7faba588745301d3","fromSide":"left","toNode":"982affecf50b77a7","toSide":"right"},
		{"id":"a01afb15d7e86816","fromNode":"40c7865b8f25b70c","fromSide":"left","toNode":"c6062d8e0682f91c","toSide":"right"},
		{"id":"a49baafd23dede79","fromNode":"40c7865b8f25b70c","fromSide":"left","toNode":"592a6510bc488753","toSide":"right"},
		{"id":"77f0071df9327f97","fromNode":"40c7865b8f25b70c","fromSide":"left","toNode":"aa5b460a0a939bfb","toSide":"right"},
		{"id":"020f8fea6e9341f9","fromNode":"40c7865b8f25b70c","fromSide":"left","toNode":"ea336c7ae5102330","toSide":"right"},
		{"id":"782e0251533a5def","fromNode":"40c7865b8f25b70c","fromSide":"bottom","toNode":"558ec9bc48ac591e","toSide":"top"},
		{"id":"18fbb36941d6233b","fromNode":"40c7865b8f25b70c","fromSide":"bottom","toNode":"f14e4b5030e3eb18","toSide":"top"},
		{"id":"ac3680ba627154d6","fromNode":"40c7865b8f25b70c","fromSide":"top","toNode":"6d3f0ee38c477103","toSide":"bottom"},
		{"id":"186bdb5db0b55d97","fromNode":"40c7865b8f25b70c","fromSide":"top","toNode":"8df6e7351aa1daa0","toSide":"bottom"},
		{"id":"1bfb3a89c611a6e8","fromNode":"7faba588745301d3","fromSide":"left","toNode":"40a403be891b3ad8","toSide":"right"},
		{"id":"c4e14da58d6061bc","fromNode":"40c7865b8f25b70c","fromSide":"bottom","toNode":"ec9f179481f9c2a7","toSide":"top"},
		{"id":"ae0fe08d563c63b1","fromNode":"40c7865b8f25b70c","fromSide":"top","toNode":"47db9bdb256c41e5","toSide":"bottom"},
		{"id":"2cfa3efe99602891","fromNode":"40c7865b8f25b70c","fromSide":"left","toNode":"5dcc011204507677","toSide":"right"},
		{"id":"038069a500fc40eb","fromNode":"50c944557b52e782","fromSide":"top","toNode":"03e3427fe071d031","toSide":"bottom"},
		{"id":"3ab321a10681ca53","fromNode":"03e3427fe071d031","fromSide":"top","toNode":"83a29c4a8c5b1c80","toSide":"bottom"},
		{"id":"d828cb79080f5589","fromNode":"03e3427fe071d031","fromSide":"top","toNode":"f6a625516a6f8c7f","toSide":"bottom"},
		{"id":"036dc40f832314fc","fromNode":"03e3427fe071d031","fromSide":"right","toNode":"36790821c6931162","toSide":"left"},
		{"id":"4126148a17a20f6d","fromNode":"03e3427fe071d031","fromSide":"right","toNode":"e022313f456259a3","toSide":"left"},
		{"id":"798eb730d5dfc954","fromNode":"03e3427fe071d031","fromSide":"right","toNode":"2baf9f379258a853","toSide":"left"},
		{"id":"c1ed926c4de9eba7","fromNode":"50c944557b52e782","fromSide":"bottom","toNode":"515a2406780f1d95","toSide":"top"},
		{"id":"ee571e3b86e7741f","fromNode":"515a2406780f1d95","fromSide":"bottom","toNode":"cb9c16a40af266f6","toSide":"top"},
		{"id":"efe8db7a6b11a40c","fromNode":"515a2406780f1d95","fromSide":"bottom","toNode":"bf63a203b0ed9858","toSide":"top"},
		{"id":"ffe79fd5e037b71a","fromNode":"515a2406780f1d95","fromSide":"bottom","toNode":"cb44fcf13e689e44","toSide":"top"},
		{"id":"5e679d1703d21a9b","fromNode":"515a2406780f1d95","fromSide":"bottom","toNode":"9f4ab1beed5d555f","toSide":"top"},
		{"id":"9d2370a8e44773d6","fromNode":"515a2406780f1d95","fromSide":"left","toNode":"96e222fb919e0cf5","toSide":"right"},
		{"id":"7ffe3b41396a13cb","fromNode":"515a2406780f1d95","fromSide":"left","toNode":"a264a0de0542254c","toSide":"right"},
		{"id":"1e83688699b0b85c","fromNode":"515a2406780f1d95","fromSide":"right","toNode":"6e42de452965aa3d","toSide":"left"},
		{"id":"b9ea18910af8b7dc","fromNode":"50c944557b52e782","fromSide":"left","toNode":"3ef6411e18abb680","toSide":"right"},
		{"id":"aa9b97661cf8cd56","fromNode":"3ef6411e18abb680","fromSide":"left","toNode":"be045e2954004e4a","toSide":"right"},
		{"id":"a59660fe76435509","fromNode":"3ef6411e18abb680","fromSide":"left","toNode":"4d3f6ba9842ce705","toSide":"right"},
		{"id":"d6305711270640cd","fromNode":"3ef6411e18abb680","fromSide":"left","toNode":"6335df250cb036b2","toSide":"right"},
		{"id":"8a65f6f9686e5704","fromNode":"3ef6411e18abb680","fromSide":"left","toNode":"8f0098f2fef86509","toSide":"right"},
		{"id":"924decefed7c8017","fromNode":"3ef6411e18abb680","fromSide":"left","toNode":"3bf2782ae76c43a4","toSide":"right"},
		{"id":"f5957e64d2d783b1","fromNode":"3ef6411e18abb680","fromSide":"top","toNode":"bbf52f19d0d6ecd3","toSide":"bottom"},
		{"id":"18fa5e985a39277c","fromNode":"3ef6411e18abb680","fromSide":"top","toNode":"1ee68b5ccfe02791","toSide":"bottom"},
		{"id":"882680dd9797e426","fromNode":"3ef6411e18abb680","fromSide":"top","toNode":"006541ef66596c51","toSide":"bottom"},
		{"id":"b5cd5c719db75967","fromNode":"3ef6411e18abb680","fromSide":"bottom","toNode":"599c66a23db9ab1b","toSide":"top"},
		{"id":"d2dac65d3a751654","fromNode":"3ef6411e18abb680","fromSide":"bottom","toNode":"bb7476fc6eac1ef5","toSide":"top"},
		{"id":"dbdb05b3178b45b4","fromNode":"3ef6411e18abb680","fromSide":"right","toNode":"8e2c5f136c10e8c3","toSide":"left"}
	]
}